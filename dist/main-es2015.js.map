{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/API.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/aws-exports.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","/* tslint:disable */\n/* eslint-disable */\n//  This file was automatically generated and should not be edited.\nimport { Injectable } from \"@angular/core\";\nimport API, { graphqlOperation } from \"@aws-amplify/api\";\nimport { GraphQLResult } from \"@aws-amplify/api/lib/types\";\nimport * as Observable from \"zen-observable\";\n\nexport type CreateTodoInput = {\n  id?: string | null;\n  name: string;\n  description?: string | null;\n};\n\nexport type ModelTodoConditionInput = {\n  name?: ModelStringInput | null;\n  description?: ModelStringInput | null;\n  and?: Array<ModelTodoConditionInput | null> | null;\n  or?: Array<ModelTodoConditionInput | null> | null;\n  not?: ModelTodoConditionInput | null;\n};\n\nexport type ModelStringInput = {\n  ne?: string | null;\n  eq?: string | null;\n  le?: string | null;\n  lt?: string | null;\n  ge?: string | null;\n  gt?: string | null;\n  contains?: string | null;\n  notContains?: string | null;\n  between?: Array<string | null> | null;\n  beginsWith?: string | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n  size?: ModelSizeInput | null;\n};\n\nexport enum ModelAttributeTypes {\n  binary = \"binary\",\n  binarySet = \"binarySet\",\n  bool = \"bool\",\n  list = \"list\",\n  map = \"map\",\n  number = \"number\",\n  numberSet = \"numberSet\",\n  string = \"string\",\n  stringSet = \"stringSet\",\n  _null = \"_null\"\n}\n\nexport type ModelSizeInput = {\n  ne?: number | null;\n  eq?: number | null;\n  le?: number | null;\n  lt?: number | null;\n  ge?: number | null;\n  gt?: number | null;\n  between?: Array<number | null> | null;\n};\n\nexport type UpdateTodoInput = {\n  id: string;\n  name?: string | null;\n  description?: string | null;\n};\n\nexport type DeleteTodoInput = {\n  id?: string | null;\n};\n\nexport type ModelTodoFilterInput = {\n  id?: ModelIDInput | null;\n  name?: ModelStringInput | null;\n  description?: ModelStringInput | null;\n  and?: Array<ModelTodoFilterInput | null> | null;\n  or?: Array<ModelTodoFilterInput | null> | null;\n  not?: ModelTodoFilterInput | null;\n};\n\nexport type ModelIDInput = {\n  ne?: string | null;\n  eq?: string | null;\n  le?: string | null;\n  lt?: string | null;\n  ge?: string | null;\n  gt?: string | null;\n  contains?: string | null;\n  notContains?: string | null;\n  between?: Array<string | null> | null;\n  beginsWith?: string | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n  size?: ModelSizeInput | null;\n};\n\nexport type CreateTodoMutation = {\n  __typename: \"Todo\";\n  id: string;\n  name: string;\n  description: string | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type UpdateTodoMutation = {\n  __typename: \"Todo\";\n  id: string;\n  name: string;\n  description: string | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type DeleteTodoMutation = {\n  __typename: \"Todo\";\n  id: string;\n  name: string;\n  description: string | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type GetTodoQuery = {\n  __typename: \"Todo\";\n  id: string;\n  name: string;\n  description: string | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type ListTodosQuery = {\n  __typename: \"ModelTodoConnection\";\n  items: Array<{\n    __typename: \"Todo\";\n    id: string;\n    name: string;\n    description: string | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  nextToken: string | null;\n};\n\nexport type OnCreateTodoSubscription = {\n  __typename: \"Todo\";\n  id: string;\n  name: string;\n  description: string | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnUpdateTodoSubscription = {\n  __typename: \"Todo\";\n  id: string;\n  name: string;\n  description: string | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnDeleteTodoSubscription = {\n  __typename: \"Todo\";\n  id: string;\n  name: string;\n  description: string | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class APIService {\n  async CreateTodo(\n    input: CreateTodoInput,\n    condition?: ModelTodoConditionInput\n  ): Promise<CreateTodoMutation> {\n    const statement = `mutation CreateTodo($input: CreateTodoInput!, $condition: ModelTodoConditionInput) {\n        createTodo(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          description\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <CreateTodoMutation>response.data.createTodo;\n  }\n  async UpdateTodo(\n    input: UpdateTodoInput,\n    condition?: ModelTodoConditionInput\n  ): Promise<UpdateTodoMutation> {\n    const statement = `mutation UpdateTodo($input: UpdateTodoInput!, $condition: ModelTodoConditionInput) {\n        updateTodo(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          description\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <UpdateTodoMutation>response.data.updateTodo;\n  }\n  async DeleteTodo(\n    input: DeleteTodoInput,\n    condition?: ModelTodoConditionInput\n  ): Promise<DeleteTodoMutation> {\n    const statement = `mutation DeleteTodo($input: DeleteTodoInput!, $condition: ModelTodoConditionInput) {\n        deleteTodo(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          description\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <DeleteTodoMutation>response.data.deleteTodo;\n  }\n  async GetTodo(id: string): Promise<GetTodoQuery> {\n    const statement = `query GetTodo($id: ID!) {\n        getTodo(id: $id) {\n          __typename\n          id\n          name\n          description\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <GetTodoQuery>response.data.getTodo;\n  }\n  async ListTodos(\n    filter?: ModelTodoFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise<ListTodosQuery> {\n    const statement = `query ListTodos($filter: ModelTodoFilterInput, $limit: Int, $nextToken: String) {\n        listTodos(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            name\n            description\n            createdAt\n            updatedAt\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <ListTodosQuery>response.data.listTodos;\n  }\n  OnCreateTodoListener: Observable<OnCreateTodoSubscription> = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateTodo {\n        onCreateTodo {\n          __typename\n          id\n          name\n          description\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<OnCreateTodoSubscription>;\n\n  OnUpdateTodoListener: Observable<OnUpdateTodoSubscription> = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateTodo {\n        onUpdateTodo {\n          __typename\n          id\n          name\n          description\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<OnUpdateTodoSubscription>;\n\n  OnDeleteTodoListener: Observable<OnDeleteTodoSubscription> = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteTodo {\n        onDeleteTodo {\n          __typename\n          id\n          name\n          description\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<OnDeleteTodoSubscription>;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { APIService } from './API.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  constructor(private apiService: APIService) { }\n  title = 'myAmplifyProject';\n  todos: Array<any>;\n\n  async ngOnInit() {\n    this.apiService.ListTodos().then((evt) => {\n      this.todos = evt.items;\n    });\n    this.apiService.OnCreateTodoListener.subscribe((evt) => {\n      const data = (evt as any).value.data.onCreateTodo;\n      this.todos = [...this.todos, data];\n    });\n  }\n\n  createTodo() {\n    this.apiService.CreateTodo({\n      name: 'Angular',\n      description: 'testing'\n    });\n  }\n}","<button (click)=\"createTodo()\">Add Todo</button>\n\n<ul>\n  <li *ngFor=\"let item of todos\">{{item.name}} - {{item.description}}</li>\n</ul>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-1\",\n    \"aws_appsync_graphqlEndpoint\": \"https://gs7sx5uj7zaf3gfqxl2kfqnra4.appsync-api.us-east-1.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"us-east-1\",\n    \"aws_appsync_authenticationType\": \"API_KEY\",\n    \"aws_appsync_apiKey\": \"da2-e4nd32rwhvdn7a4pzxdbpnre5y\"\n};\n\n\nexport default awsmobile;\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport PubSub from '@aws-amplify/pubsub';\nimport API from '@aws-amplify/api';\nimport awsconfig from './aws-exports';\n\nAPI.configure(awsconfig);\nPubSub.configure(awsconfig);\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}
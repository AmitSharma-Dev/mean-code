{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/API.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/aws-exports.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ModelAttributeTypes","APIService","OnCreateTodoListener","graphql","OnUpdateTodoListener","OnDeleteTodoListener","input","condition","statement","gqlAPIServiceArguments","response","data","createTodo","updateTodo","deleteTodo","getTodo","filter","limit","nextToken","listTodos","providedIn","routes","AppRoutingModule","forRoot","imports","AppComponent","apiService","title","ListTodos","evt","todos","items","subscribe","value","onCreateTodo","CreateTodo","name","description","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","awsmobile","environment","production","configure","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","/* tslint:disable */\n/* eslint-disable */\n//  This file was automatically generated and should not be edited.\nimport { Injectable } from \"@angular/core\";\nimport API, { graphqlOperation } from \"@aws-amplify/api\";\nimport { GraphQLResult } from \"@aws-amplify/api/lib/types\";\nimport * as Observable from \"zen-observable\";\n\nexport type CreateTodoInput = {\n  id?: string | null;\n  name: string;\n  description?: string | null;\n};\n\nexport type ModelTodoConditionInput = {\n  name?: ModelStringInput | null;\n  description?: ModelStringInput | null;\n  and?: Array<ModelTodoConditionInput | null> | null;\n  or?: Array<ModelTodoConditionInput | null> | null;\n  not?: ModelTodoConditionInput | null;\n};\n\nexport type ModelStringInput = {\n  ne?: string | null;\n  eq?: string | null;\n  le?: string | null;\n  lt?: string | null;\n  ge?: string | null;\n  gt?: string | null;\n  contains?: string | null;\n  notContains?: string | null;\n  between?: Array<string | null> | null;\n  beginsWith?: string | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n  size?: ModelSizeInput | null;\n};\n\nexport enum ModelAttributeTypes {\n  binary = \"binary\",\n  binarySet = \"binarySet\",\n  bool = \"bool\",\n  list = \"list\",\n  map = \"map\",\n  number = \"number\",\n  numberSet = \"numberSet\",\n  string = \"string\",\n  stringSet = \"stringSet\",\n  _null = \"_null\"\n}\n\nexport type ModelSizeInput = {\n  ne?: number | null;\n  eq?: number | null;\n  le?: number | null;\n  lt?: number | null;\n  ge?: number | null;\n  gt?: number | null;\n  between?: Array<number | null> | null;\n};\n\nexport type UpdateTodoInput = {\n  id: string;\n  name?: string | null;\n  description?: string | null;\n};\n\nexport type DeleteTodoInput = {\n  id?: string | null;\n};\n\nexport type ModelTodoFilterInput = {\n  id?: ModelIDInput | null;\n  name?: ModelStringInput | null;\n  description?: ModelStringInput | null;\n  and?: Array<ModelTodoFilterInput | null> | null;\n  or?: Array<ModelTodoFilterInput | null> | null;\n  not?: ModelTodoFilterInput | null;\n};\n\nexport type ModelIDInput = {\n  ne?: string | null;\n  eq?: string | null;\n  le?: string | null;\n  lt?: string | null;\n  ge?: string | null;\n  gt?: string | null;\n  contains?: string | null;\n  notContains?: string | null;\n  between?: Array<string | null> | null;\n  beginsWith?: string | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n  size?: ModelSizeInput | null;\n};\n\nexport type CreateTodoMutation = {\n  __typename: \"Todo\";\n  id: string;\n  name: string;\n  description: string | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type UpdateTodoMutation = {\n  __typename: \"Todo\";\n  id: string;\n  name: string;\n  description: string | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type DeleteTodoMutation = {\n  __typename: \"Todo\";\n  id: string;\n  name: string;\n  description: string | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type GetTodoQuery = {\n  __typename: \"Todo\";\n  id: string;\n  name: string;\n  description: string | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type ListTodosQuery = {\n  __typename: \"ModelTodoConnection\";\n  items: Array<{\n    __typename: \"Todo\";\n    id: string;\n    name: string;\n    description: string | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  nextToken: string | null;\n};\n\nexport type OnCreateTodoSubscription = {\n  __typename: \"Todo\";\n  id: string;\n  name: string;\n  description: string | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnUpdateTodoSubscription = {\n  __typename: \"Todo\";\n  id: string;\n  name: string;\n  description: string | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnDeleteTodoSubscription = {\n  __typename: \"Todo\";\n  id: string;\n  name: string;\n  description: string | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class APIService {\n  async CreateTodo(\n    input: CreateTodoInput,\n    condition?: ModelTodoConditionInput\n  ): Promise<CreateTodoMutation> {\n    const statement = `mutation CreateTodo($input: CreateTodoInput!, $condition: ModelTodoConditionInput) {\n        createTodo(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          description\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <CreateTodoMutation>response.data.createTodo;\n  }\n  async UpdateTodo(\n    input: UpdateTodoInput,\n    condition?: ModelTodoConditionInput\n  ): Promise<UpdateTodoMutation> {\n    const statement = `mutation UpdateTodo($input: UpdateTodoInput!, $condition: ModelTodoConditionInput) {\n        updateTodo(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          description\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <UpdateTodoMutation>response.data.updateTodo;\n  }\n  async DeleteTodo(\n    input: DeleteTodoInput,\n    condition?: ModelTodoConditionInput\n  ): Promise<DeleteTodoMutation> {\n    const statement = `mutation DeleteTodo($input: DeleteTodoInput!, $condition: ModelTodoConditionInput) {\n        deleteTodo(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          description\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <DeleteTodoMutation>response.data.deleteTodo;\n  }\n  async GetTodo(id: string): Promise<GetTodoQuery> {\n    const statement = `query GetTodo($id: ID!) {\n        getTodo(id: $id) {\n          __typename\n          id\n          name\n          description\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <GetTodoQuery>response.data.getTodo;\n  }\n  async ListTodos(\n    filter?: ModelTodoFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise<ListTodosQuery> {\n    const statement = `query ListTodos($filter: ModelTodoFilterInput, $limit: Int, $nextToken: String) {\n        listTodos(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            name\n            description\n            createdAt\n            updatedAt\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <ListTodosQuery>response.data.listTodos;\n  }\n  OnCreateTodoListener: Observable<OnCreateTodoSubscription> = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateTodo {\n        onCreateTodo {\n          __typename\n          id\n          name\n          description\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<OnCreateTodoSubscription>;\n\n  OnUpdateTodoListener: Observable<OnUpdateTodoSubscription> = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateTodo {\n        onUpdateTodo {\n          __typename\n          id\n          name\n          description\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<OnUpdateTodoSubscription>;\n\n  OnDeleteTodoListener: Observable<OnDeleteTodoSubscription> = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteTodo {\n        onDeleteTodo {\n          __typename\n          id\n          name\n          description\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<OnDeleteTodoSubscription>;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<button (click)=\"createTodo()\">Add Todo</button>\n\n<ul>\n  <li *ngFor=\"let item of todos\">{{item.name}} - {{item.description}}</li>\n</ul>","import { Component, OnInit } from '@angular/core';\nimport { APIService } from './API.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  constructor(private apiService: APIService) { }\n  title = 'myAmplifyProject';\n  todos: Array<any>;\n\n  async ngOnInit() {\n    this.apiService.ListTodos().then((evt) => {\n      this.todos = evt.items;\n    });\n    this.apiService.OnCreateTodoListener.subscribe((evt) => {\n      const data = (evt as any).value.data.onCreateTodo;\n      this.todos = [...this.todos, data];\n    });\n  }\n\n  createTodo() {\n    this.apiService.CreateTodo({\n      name: 'Angular',\n      description: 'testing'\n    });\n  }\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-1\",\n    \"aws_appsync_graphqlEndpoint\": \"https://gs7sx5uj7zaf3gfqxl2kfqnra4.appsync-api.us-east-1.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"us-east-1\",\n    \"aws_appsync_authenticationType\": \"API_KEY\",\n    \"aws_appsync_apiKey\": \"da2-e4nd32rwhvdn7a4pzxdbpnre5y\"\n};\n\n\nexport default awsmobile;\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport PubSub from '@aws-amplify/pubsub';\nimport API from '@aws-amplify/api';\nimport awsconfig from './aws-exports';\n\nAPI.configure(awsconfig);\nPubSub.configure(awsconfig);\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}